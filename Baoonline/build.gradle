apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'
//apply plugin: 'com.frogermcs.androiddevmetrics'
android {
    compileSdkVersion rootProject.ext.compileVersion
    buildToolsVersion rootProject.ext.buildToolVersion
    defaultConfig {
        applicationId rootProject.ext.packageName
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionName rootProject.ext.versionName
        versionCode rootProject.ext.versionCode
        multiDexEnabled true
    }
    signingConfigs {
        Key {
            try {
                storeFile file("toankey.iks")
                storePassword KEYSTORE_PASSWORD
                keyAlias "thekey"
                keyPassword KEY_PASSWORD
            }
            catch (ignored) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.Key
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    android.applicationVariants.all { variant ->
        configApkFileName(variant, defaultConfig)
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        warning 'InvalidPackage'
        abortOnError false
    }
    dexOptions
            {
                incremental false
                javaMaxHeapSize "4096M"
                preDexLibraries = false
            }
    sourceSets {
        main {
           /* res.srcDirs = [
                    'src/main/res-main',
                    file('src/main/res-screen')
                            .listFiles()
                            .each { res.srcDirs += it.path }
            ]*/
            res.srcDirs = [
                    'src/main/res-main',
                    'src/main/res-screen/Home',
                    'src/main/res-screen/ReadNews',
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
@SuppressWarnings("GroovyAssignabilityCheck")
def configApkFileName(variant, defaultConfig) {
    variant.outputs.each { output ->
        if (variant.buildType.name == android.buildTypes.debug.name) {
            if (output.zipAlign) {
                def file = output.outputFile
                output.outputFile = new File(file.parentFile, variant.buildType.name + "_v"
                        + defaultConfig.versionName + "_"
                        + defaultConfig.versionCode
                        + ".apk")
            }
        } else if (variant.buildType.name == android.buildTypes.release.name) {
            if (output.zipAlign) {
                def file = output.outputFile
                output.outputFile = new File(file.parentFile, "BaoOnline_" + variant.buildType.name
                        + "_v" + defaultConfig.versionName + "_"
                        + defaultConfig.versionCode
                        + ".apk")
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':library')
    //-----TikXml
    compile rootProject.ext.tikxml
    compile rootProject.ext.tikxml_annotation
    compile rootProject.ext.tikxml_core
    apt rootProject.ext.tikxml_processor
    //----- Dagger
    compile rootProject.ext.dagger
    apt rootProject.ext.daggerCompiler
    provided rootProject.ext.javaxannotation
    //----- Retrofit
    compile rootProject.ext.retrofitRxJavaAdapter
    compile rootProject.ext.okHttp
    compile rootProject.ext.okHttpLoggingInterceptor
    //----- Glide
    compile rootProject.ext.glide
    compile rootProject.ext.fresco
    //-----Network
    compile rootProject.ext.reactivenetwork
    //-----Jsoup
    compile rootProject.ext.jsoup
    //----Logger
   // compile rootProject.ext.logger
  /*  //---- Check Update
    compile('com.google.apis:google-api-services-androidpublisher:v2-rev27-1.22.0') {
        exclude module: 'httpclient'
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }*/
    compile 'com.github.asLody:turbodex:1.1.0'
}
