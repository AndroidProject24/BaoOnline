
apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

android {
    defaultPublishConfig "debug"

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
    }
}

dependencies {
    def injectDependencies = rootProject.ext.injectDependencies
    def networkDependencies = rootProject.ext.networkDependencies
    def appDependencies = rootProject.ext.appDependencies
    def supportDependencies = rootProject.ext.supportDependencies

    //----- Support Libs
    compile supportDependencies.supportCompat
    compile supportDependencies.supportRecyclerView
    compile supportDependencies.supportCardView
    compile supportDependencies.customtabs
    compile  supportDependencies.supportannotations

    //----- Dagger
    compile  injectDependencies.dagger
    apt      injectDependencies.daggerCompiler
    provided injectDependencies.javaxannotation
    compile  injectDependencies.rxjava
    compile  injectDependencies.rxandroid

    //----- Retrofit
    compile  networkDependencies.gson
    compile  networkDependencies.okHttp
    compile  networkDependencies.retrofitRxJavaAdapter

    //-----Network
    //compile networkDependencies.reactivenetwork

    //----- Fresco
    compile networkDependencies.fresco
    compile networkDependencies.frescoHttp

    //-----Jsoup
    compile appDependencies.jsoup

    //Tikxml
    compile  appDependencies.tikxml
    compile  appDependencies.tikxml_annotation
    compile  appDependencies.tikxml_core
    apt      appDependencies.tikxml_processor
}
